/**
 * OptHub REST API
 * OptHub Public REST API.
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: dev@opthub.ai
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ScalarOrVector.h
 *
 * A double-precision floating-point scalar or vector.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ScalarOrVector_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ScalarOrVector_H_


#include "opthub_api_client/ModelBase.h"

#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// A double-precision floating-point scalar or vector.
/// </summary>
class  ScalarOrVector
    : public ModelBase
{
public:
    ScalarOrVector();
    virtual ~ScalarOrVector();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ScalarOrVector members

    /// <summary>
    /// A double-precision floating-point vector.
    /// </summary>
    std::vector<double>& getVector();
    bool vectorIsSet() const;
    void unsetVector();

    void setVector(std::vector<double> value);

    /// <summary>
    /// A double-precision floating-point scalar value
    /// </summary>
    double getScalar() const;
    bool scalarIsSet() const;
    void unsetScalar();

    void setScalar(double value);


protected:
    std::vector<double> m_Vector;
    bool m_VectorIsSet;
    double m_Scalar;
    bool m_ScalarIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ScalarOrVector_H_ */
