/**
 * OptHub REST API
 * OptHub Public REST API.
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: dev@opthub.ai
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CreateSolutionResponse.h
 *
 * Information of the created solution
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CreateSolutionResponse_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CreateSolutionResponse_H_


#include "opthub_api_client/ModelBase.h"

#include "opthub_api_client/model/Participant.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Participant;


/// <summary>
/// Information of the created solution
/// </summary>
class  CreateSolutionResponse
    : public ModelBase
{
public:
    CreateSolutionResponse();
    virtual ~CreateSolutionResponse();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// CreateSolutionResponse members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Participant> getParticipant() const;
    bool participantIsSet() const;
    void unsetParticipant();

    void setParticipant(const std::shared_ptr<Participant>& value);

    /// <summary>
    /// Trial number
    /// </summary>
    int32_t getTrialNo() const;
    bool trialNoIsSet() const;
    void unsetTrialNo();

    void setTrialNo(int32_t value);


protected:
    std::shared_ptr<Participant> m_Participant;
    bool m_ParticipantIsSet;
    int32_t m_TrialNo;
    bool m_TrialNoIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CreateSolutionResponse_H_ */
